{"ast":null,"code":"var _jsxFileName = \"/Users/ikegbulamchima/Documents/My-Projects/interaction-test/Front-end/src/component/interaction-percentage/InteractionPercentage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport { List, ListItemText, ListItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InteractionPercentage(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [listData, setListData] = useState([]);\n  const totalInteractions = data.length;\n\n  const getOccurance = name => {\n    const ocurrances = data.filter(interaction => interaction.name === name);\n    if (ocurrances) return ocurrances.length;\n  };\n\n  const getPercentage = interaction => {\n    const amount = getOccurance(interaction);\n    const frequency = totalInteractions * amount;\n    const percentage = frequency / 100;\n    return percentage;\n  };\n\n  const populatePecentage = items => {\n    return items.reduce((acc, item) => {\n      const newItem = { ...item\n      };\n      newItem.percentage = getPercentage(newItem.name);\n      acc.push(newItem);\n      return acc;\n    }, []);\n  };\n\n  const removeDuplicate = interactions => {\n    const filteredArr = interactions.reduce((acc, current) => {\n      const x = acc.find(item => item.sector_id === current.sector_id);\n\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    return filteredArr;\n  };\n\n  useEffect(() => {\n    if (data) {\n      const newData = populatePecentage(data);\n      const uniqueNewData = removeDuplicate(newData);\n      setListData(uniqueNewData);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: 400,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          fontWeight: \"bolder\",\n          ba\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: \" NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: \" DATE \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: \" PERCENTAGE \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), listData.length > 0 && listData.map(interaction => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: [\" \", interaction.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: [\" \", interaction.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: [\" \", interaction.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, interaction.sector_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InteractionPercentage, \"54iWlGYNbI5Lh3s0sesCFTBMOds=\");\n\n_c = InteractionPercentage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InteractionPercentage\");","map":{"version":3,"names":["React","useEffect","useState","Box","List","ListItemText","ListItem","InteractionPercentage","data","listData","setListData","totalInteractions","length","getOccurance","name","ocurrances","filter","interaction","getPercentage","amount","frequency","percentage","populatePecentage","items","reduce","acc","item","newItem","push","removeDuplicate","interactions","filteredArr","current","x","find","sector_id","concat","newData","uniqueNewData","width","height","bgcolor","fontWeight","ba","map","date"],"sources":["/Users/ikegbulamchima/Documents/My-Projects/interaction-test/Front-end/src/component/interaction-percentage/InteractionPercentage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport { List,ListItemText,ListItem } from \"@mui/material\";\n\n\nexport default function InteractionPercentage({data}) {\n  const [listData, setListData] = useState([]);\n\n  const totalInteractions = data.length\n\n  const getOccurance = (name) => {\n    const ocurrances = data.filter((interaction) => interaction.name === name)\n    if (ocurrances) return ocurrances.length\n  }\n  const getPercentage = (interaction) => {\n    const amount = getOccurance(interaction)\n    const frequency = totalInteractions * amount\n    const percentage = frequency / 100\n    return percentage\n  }\n  const populatePecentage = (items) => {\n    return items.reduce((acc, item) => {\n    const newItem = {...item}\n    newItem.percentage = getPercentage(newItem.name)\n    acc.push(newItem)\n    return acc\n    },[])\n  }\n\n  const removeDuplicate = (interactions) => {\n    const filteredArr = interactions.reduce((acc, current) => {\n      const x = acc.find(item => item.sector_id === current.sector_id);\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    return filteredArr\n    }\n\n  useEffect(() => {\n    if (data) {\n      const newData = populatePecentage(data)\n      const uniqueNewData = removeDuplicate(newData)\n      setListData(uniqueNewData)\n    }\n  }, [data]);\n\n  return (\n    <Box\n      sx={{ width: '100%', height: 400, bgcolor: 'background.paper' }}\n    >\n    <List>\n        <ListItem style={{fontWeight:\"bolder\", ba}}> \n          <ListItemText sx={{width:\"15rem\"}}> NAME</ListItemText> \n          <ListItemText sx={{width:\"15rem\"}}> DATE </ListItemText> \n          <ListItemText sx={{width:\"15rem\"}}> PERCENTAGE </ListItemText> \n        </ListItem>\n        { listData.length > 0 && listData.map((interaction) => \n        <ListItem key={interaction.sector_id}> \n          <ListItemText sx={{width:\"15rem\"}}> {interaction.name}</ListItemText> \n          <ListItemText sx={{width:\"15rem\"}}> {interaction.date}</ListItemText> \n          <ListItemText sx={{width:\"15rem\"}}> {interaction.percentage}%</ListItemText> \n        </ListItem>\n        )}     \n        </List>\n \n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}