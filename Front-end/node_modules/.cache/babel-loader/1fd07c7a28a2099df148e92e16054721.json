{"ast":null,"code":"var _jsxFileName = \"/Users/ikegbulamchima/Documents/My-Projects/interaction-test/Front-end/src/component/interaction-percentage/InteractionPercentage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Box from '@mui/material/Box';\nimport { List, ListItemText, ListItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InteractionPercentage(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [listData, setListData] = useState([]);\n  const totalInteractions = data.length;\n\n  const getOccurance = name => {};\n\n  const populatePecentage = useCallback(items => {\n    return items.reduce((acc, item) => {\n      const newItem = { ...item\n      };\n      const ocurrances = data.filter(interaction => interaction.name === name);\n      const amount = occurances;\n      const frequency = totalInteractions * amount;\n      const percentage = frequency / 100;\n      newItem.percentage = percentage;\n      acc.push(newItem);\n      return acc;\n    }, []);\n  }, [totalInteractions, getOccurance]);\n\n  const removeDuplicate = interactions => {\n    const filteredArr = interactions.reduce((acc, current) => {\n      const x = acc.find(item => item.sector_id === current.sector_id);\n\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    return filteredArr;\n  };\n\n  useEffect(() => {\n    if (data) {\n      const newData = populatePecentage(data);\n      const uniqueNewData = removeDuplicate(newData);\n      setListData(uniqueNewData);\n    }\n  }, [data, populatePecentage]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: 400,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0.2)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: \" NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: \" DATE \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: \" PERCENTAGE \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), listData.length > 0 && listData.map(interaction => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: [\" \", interaction.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: [\" \", interaction.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          sx: {\n            width: \"15rem\"\n          },\n          children: [\" \", interaction.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, interaction.sector_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InteractionPercentage, \"9141NtiIjnGG7XMDw3+BMB9xnNg=\");\n\n_c = InteractionPercentage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InteractionPercentage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Box","List","ListItemText","ListItem","InteractionPercentage","data","listData","setListData","totalInteractions","length","getOccurance","name","populatePecentage","items","reduce","acc","item","newItem","ocurrances","filter","interaction","amount","occurances","frequency","percentage","push","removeDuplicate","interactions","filteredArr","current","x","find","sector_id","concat","newData","uniqueNewData","width","height","bgcolor","backgroundColor","map","date"],"sources":["/Users/ikegbulamchima/Documents/My-Projects/interaction-test/Front-end/src/component/interaction-percentage/InteractionPercentage.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Box from '@mui/material/Box';\nimport { List,ListItemText,ListItem } from \"@mui/material\";\n\nexport default function InteractionPercentage({data}) {\n  const [listData, setListData] = useState([]);\n\n  const totalInteractions = data.length\n\n  const getOccurance = (name) => {\n    \n  }\n\n const populatePecentage = useCallback(\n    (items) => {\n      return items.reduce((acc, item) => {\n        const newItem = {...item}\n        const ocurrances = data.filter((interaction) => interaction.name === name)\n        const amount = occurances\n        const frequency = totalInteractions * amount\n        const percentage = frequency / 100\n        newItem.percentage = percentage\n        acc.push(newItem)\n        return acc\n        },[])\n    },[totalInteractions,getOccurance],\n  )\n\n  const removeDuplicate = (interactions) => {\n    const filteredArr = interactions.reduce((acc, current) => {\n      const x = acc.find(item => item.sector_id === current.sector_id);\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    return filteredArr\n    }\n\n  useEffect(() => {\n    if (data) {\n      const newData = populatePecentage(data)\n      const uniqueNewData = removeDuplicate(newData)\n      setListData(uniqueNewData)\n    }\n  }, [data,populatePecentage]);\n\n  return (\n    <Box\n      sx={{ width: '100%', height: 400, bgcolor: 'background.paper' }}\n    >\n      <List>\n          <ListItem style={{backgroundColor:\"rgba(0,0,0,0.2)\"}}> \n            <ListItemText sx={{width:\"15rem\"}}> NAME</ListItemText> \n            <ListItemText sx={{width:\"15rem\"}}> DATE </ListItemText> \n            <ListItemText sx={{width:\"15rem\"}}> PERCENTAGE </ListItemText> \n          </ListItem>\n          { listData.length > 0 && listData.map((interaction) => \n          <ListItem key={interaction.sector_id}> \n            <ListItemText sx={{width:\"15rem\"}}> {interaction.name}</ListItemText> \n            <ListItemText sx={{width:\"15rem\"}}> {interaction.date}</ListItemText> \n            <ListItemText sx={{width:\"15rem\"}}> {interaction.percentage}%</ListItemText> \n          </ListItem>\n          )}     \n      </List>\n \n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}